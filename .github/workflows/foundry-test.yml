name: foundry-test

on:
  workflow_call:
    inputs:
      mode:
        default: "ALL"
        type: "string"
      zksync:
        default: false
        type: boolean
      ROOT_DIR:
        description: "The root folder to look for tests"
        default: "src"
        type: "string"
    secrets:
      ALCHEMY_API_KEY:
        required: false
      READ_ONLY_PAT:
        required: false
        description: "If supplied PAT will be used for git checkout"

jobs:
  test:
    name: Foundry build n test
    runs-on: ubuntu-latest
    env:
      FOUNDRY_PROFILE: ci
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.READ_ONLY_PAT || github.token }}

      - uses: bgd-labs/action-rpc-env@main
        with:
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}

      - uses: bgd-labs/github-workflows/.github/actions/setup-node@main

      - name: Run Foundry setup
        uses: bgd-labs/github-workflows/.github/actions/foundry-setup@main
        with:
          ZKSYNC: ${{ inputs.zksync }}

      - name: Run Forge tests
        uses: bgd-labs/github-workflows/.github/actions/foundry-test@main
        with:
          MODE: ${{ inputs.mode }}
          ROOT_DIR: ${{ inputs.ROOT_DIR }}
          ZKSYNC: ${{ inputs.zksync }}

      - name: Save PR number
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          mkdir -p ./pr
          echo $PR_NUMBER > /tmp/content/pr_number.txt

      - uses: actions/upload-artifact@v4
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        with:
          name: content
          path: /tmp/content
          # overwrite as we sometimes run this job multiple times (once for zksync, once for the rest)
          overwrite: true

      # we let failing tests pass so we can log them in the comment, still we want the ci to fail
      - name: Post test
        if: ${{ env.testStatus != 0 }}
        run: |
          echo "tests failed"
          exit 1
