name: foundry-test

on:
  workflow_call:
    inputs:
      testCommand:
        default: forge test -vvv
        description: the command responsible for running the test
        type: string
        required: false

jobs:
  test:
    name: Foundry build n test
    runs-on: ubuntu-latest
    env:
      FOUNDRY_PROFILE: ci
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version | tee /tmp/foundry_version ; test ${PIPESTATUS[0]} -eq 0
          forge build --sizes | tee /tmp/foundry_build ; test ${PIPESTATUS[0]} -eq 0
        id: build

      - name: Run Forge tests
        run: |
          ${{ inputs.testCommand }} | tee /tmp/foundry_test
          echo "::set-output name=testStatus::${PIPESTATUS[0]}"
        id: test

      # comment on pr
      - id: get-comment-body
        run: |
          printf "Foundry report\n\n" > /tmp/report.txt
          printf "\`\`\`shell\n$(cat /tmp/foundry_version)\n\`\`\`\n\n" >> /tmp/report.txt
          printf "\`\`\`shell\n$(cat /tmp/foundry_build)\n\`\`\`\n\n" >> /tmp/report.txt
          printf "<details><summary>Test ${{ steps.test.outputs.testStatus == 0 && 'success' || 'error'}}</summary>\n\n\`\`\`shell\n$(cat /tmp/foundry_test)\n\`\`\`\n</details>"  >> /tmp/report.txt
          body="$(cat /tmp/report.txt | sed -r 's/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g')"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}" 
          echo "::set-output name=body::$body"

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Foundry report

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          edit-mode: replace

      # we let failing tests pass so we can log them in the comment, still we want the ci to fail
      - name: Post test
        if: ${{ steps.test.outputs.testStatus == 0 }}
        run: |
          echo "tests failed"
          exit 1
